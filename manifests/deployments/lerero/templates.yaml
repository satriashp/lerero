---
apiVersion: v1
kind: Namespace
metadata:
  name: production
  labels:
    name: production

---
# Source: lerero/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lerero
  namespace: production
  labels:
    helm.sh/chart: lerero-0.1.0
    app.kubernetes.io/name: lerero
    app.kubernetes.io/instance: lerero
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: lerero/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: lerero
  namespace: production
  labels:
    helm.sh/chart: lerero-0.1.0
    app.kubernetes.io/name: lerero
    app.kubernetes.io/instance: lerero
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: lerero
    app.kubernetes.io/instance: lerero
---
# Source: lerero/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lerero
  namespace: production
  labels:
    helm.sh/chart: lerero-0.1.0
    app.kubernetes.io/name: lerero
    app.kubernetes.io/instance: lerero
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: lerero
      app.kubernetes.io/instance: lerero
  template:
    metadata:
      labels:
        helm.sh/chart: lerero-0.1.0
        app.kubernetes.io/name: lerero
        app.kubernetes.io/instance: lerero
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: lerero
      securityContext:
        {}
      containers:
        - name: lerero
          securityContext:
            {}
          image: "registry.localhost:5000/lerero:0.1.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
# Source: lerero/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: lerero
  namespace: production
  labels:
    helm.sh/chart: lerero-0.1.0
    app.kubernetes.io/name: lerero
    app.kubernetes.io/instance: lerero
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: lerero
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
---
# Source: lerero/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "lerero-test-connection"
  namespace: production
  labels:
    helm.sh/chart: lerero-0.1.0
    app.kubernetes.io/name: lerero
    app.kubernetes.io/instance: lerero
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['lerero:3000']
  restartPolicy: Never
